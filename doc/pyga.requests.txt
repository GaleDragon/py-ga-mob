Help on module requests:

NAME
    requests - # -*- coding: utf-8 -*-

FILE
    /home/kra3/workspace/Personal/py-ga-mob/pyga/requests.py

CLASSES
    __builtin__.object
        Config
        GIFRequest
            Request
                EventRequest
                ItemRequest
                PageViewRequest
                SocialInteractionRequest
                TransactionRequest
        Parameters
        Q
        Tracker
        X10
    
    class Config(__builtin__.object)
     |  Configurations for Google Analytics: Server Side
     |  
     |  Properties:
     |  error_severity -- How strict should errors get handled? After all,
     |      we do just do some tracking stuff here, and errors shouldn't
     |      break an application's functionality in production.
     |      RECOMMENDATION: Exceptions during deveopment, warnings in production.
     |  queue_requests --  Whether to just queue all requests on HttpRequest.fire()
     |      and actually send them on shutdown after all other tasks are done.
     |      This has two advantages:
     |      1) It effectively doesn't affect app performance
     |      2) It can e.g. handle custom variables that were set after scheduling a request
     |  fire_and_forget -- Whether to make asynchronous requests to GA without
     |      waiting for any response (speeds up doing requests).
     |  logging_callback -- Logging callback, registered via setLoggingCallback().
     |      Will be fired whenever a request gets sent out and receives the
     |      full HTTP request as the first and the full HTTP response
     |      (or null if the "fireAndForget" option or simulation mode are used) as the 2nd argument.
     |  request_timeout -- Seconds (float allowed) to wait until timeout when
     |      connecting to the Google analytics endpoint host.
     |  endpoint -- Google Analytics tracking request endpoint. Can be set to null to
     |      silently simulate (and log) requests without actually sending them.
     |  anonimize_ip_address -- Whether to anonymize IP addresses within Google Analytics
     |      by stripping the last IP address block, will be mapped to "aip" parameter.
     |  site_speed_sample_rate -- Defines a new sample set size (0-100) for
     |      Site Speed data collection. By default, a fixed 1% sampling of your site
     |      visitors make up the data pool from which the Site Speed metrics are derived.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |  
     |  __setattr__(self, name, value)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ERROR_SEVERITY_PRINT = 1
     |  
     |  ERROR_SEVERITY_RAISE = 2
     |  
     |  ERROR_SEVERITY_SILECE = 0
    
    class EventRequest(Request)
     |  Method resolution order:
     |      EventRequest
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session, event)
     |  
     |  build_parameters(self)
     |  
     |  get_type(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  X10_EVENT_PROJECT_ID = 5
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Request:
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_custom_variable_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  build_visitor_parameters(self, params)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from Request:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class GIFRequest(__builtin__.object)
     |  Properties:
     |  type -- Indicates the type of request, will be mapped to "utmt" parameter
     |  config -- base.Config object
     |  x_forwarded_for --
     |  user_agent -- User Agent String
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config)
     |  
     |  build_http_request(self)
     |  
     |  build_parameters(self)
     |      Marker implementation
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class ItemRequest(Request)
     |  Method resolution order:
     |      ItemRequest
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session, item)
     |  
     |  build_custom_variable_parameters(self, parameters)
     |      The GA Javascript client doesn't send any custom variables for
     |      e-commerce requests, so we don't either.
     |  
     |  build_parameters(self)
     |  
     |  build_visitor_parameters(self, parameters)
     |      The GA Javascript client doesn't send any visitor information for
     |      e-commerce requests, so we don't either.
     |  
     |  get_type(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Request:
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from Request:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class PageViewRequest(Request)
     |  Method resolution order:
     |      PageViewRequest
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session, page)
     |  
     |  build_parameters(self)
     |  
     |  get_type(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  X10_SITESPEED_PROJECT_ID = 14
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Request:
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_custom_variable_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  build_visitor_parameters(self, params)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from Request:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Parameters(__builtin__.object)
     |  This simple class is mainly meant to be a well-documented overview
     |  of all possible GA tracking parameters.
     |  
     |  http://code.google.com/apis/analytics/docs/tracking/gaTrackingTroubleshooting.html#gifParameters
     |  
     |  General Parameters:
     |  utmwv -- Google Analytics client version
     |  utmac -- Google Analytics account ID
     |  utmhn -- Host Name
     |  utmt -- Indicates the type of request, which is one of null (for page),
     |          "event", "tran", "item", "social", "var" (deprecated) or "error"
     |          (used by ga.js for internal client error logging).
     |  utms -- Contains the amount of requests done in this session. Added in ga.js v4.9.2.
     |  utmn -- Unique ID (random number) generated for each GIF request
     |  utmcc -- Contains all cookie values, see below
     |  utme -- Extensible Parameter, used for events and custom variables
     |  utmni -- Event "non-interaction" parameter. By default, the event hit will impact a visitor's bounce rate.
     |           By setting this parameter to 1, this event hit will not be used in bounce rate calculations.
     |  aip -- Whether to anonymize IP addresses within Google Analytics by stripping the last IP address block, either null or 1
     |  utmu --  Used for GA-internal statistical client function usage and error tracking,
     |           not implemented in php-ga as of now, but here for documentation completeness.
     |           http://glucik.blogspot.com/2011/02/utmu-google-analytics-request-parameter.html
     |  
     |  Page Parameters:
     |  utmp -- Page request URI
     |  utmdt -- Page title
     |  utmcs -- Charset encoding (default "-")
     |  utmr -- Referer URL (default "-" or "0" for internal purposes)
     |  
     |  Visitor Parameters:
     |  utmip -- IP Address of the end user, found in GA for Mobile examples, but sadly seems to be ignored in normal GA use
     |  utmul -- Visitor's locale string (all lower-case, country part optional)
     |  utmfl -- Visitor's Flash version (default "-")
     |  utmje -- Visitor's Java support, either 0 or 1 (default "-")
     |  utmsc -- Visitor's screen color depth
     |  utmsr -- Visitor's screen resolution
     |  _utma -- Visitor tracking cookie parameter.
     |  
     |  Session Parameters:
     |  utmhid -- Hit id for revenue per page tracking for AdSense, a random per-session ID
     |  _utmb -- Session timeout cookie parameter.
     |  _utmc -- Session tracking cookie parameter.
     |  utmipc -- Product Code. This is the sku code for a given product.
     |  utmipn -- Product Name
     |  utmipr -- Unit Price. Value is set to numbers only.
     |  utmiqt -- Unit Quantity.
     |  utmiva -- Variations on an item.
     |  utmtid -- Order ID.
     |  utmtst -- Affiliation
     |  utmtto -- Total Cost
     |  utmttx -- Tax Cost
     |  utmtsp -- Shipping Cost
     |  utmtci -- Billing City
     |  utmtrg -- Billing Region
     |  utmtco -- Billing Country
     |  
     |  Campaign Parameters:
     |  utmcn -- Starts a new campaign session. Either utmcn or utmcr is present on any given request,
     |           but never both at the same time. Changes the campaign tracking data;
     |           but does not start a new session. Either 1 or not set.
     |           Found in gaforflash but not in ga.js, so we do not use it,
     |           but it will stay here for documentation completeness.
     |  utmcr -- Indicates a repeat campaign visit. This is set when any subsequent clicks occur on the
     |           same link. Either utmcn or utmcr is present on any given request,
     |           but never both at the same time. Either 1 or not set.
     |           Found in gaforflash but not in ga.js, so we do not use it,
     |           but it will stay here for documentation completeness.
     |  utmcid -- Campaign ID, a.k.a. "utm_id" query parameter for ga.js
     |  utmcsr -- Source, a.k.a. "utm_source" query parameter for ga.js
     |  utmgclid -- Google AdWords Click ID, a.k.a. "gclid" query parameter for ga.js
     |  utmdclid -- Not known for sure, but expected to be a DoubleClick Ad Click ID.
     |  utmccn -- Name, a.k.a. "utm_campaign" query parameter for ga.js
     |  utmcmd -- Medium, a.k.a. "utm_medium" query parameter for ga.js
     |  utmctr -- Terms/Keywords, a.k.a. "utm_term" query parameter for ga.js
     |  utmcct -- Ad Content Description, a.k.a. "utm_content" query parameter for ga.js
     |  utmcvr -- Unknown so far. Found in ga.js.
     |  _utmz -- Campaign tracking cookie parameter.
     |  
     |  Social Tracking Parameters:
     |  utmsn -- The network on which the action occurs
     |  utmsa -- The type of action that happens
     |  utmsid -- The page URL from which the action occurred.
     |  
     |  Google Website Optimizer (GWO) parameters:
     |  _utmx -- Website Optimizer cookie parameter.
     |  
     |  Custom Variables parameters (deprecated):
     |  _utmv -- Deprecated custom variables cookie parameter.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |  
     |  get_parameters(self)
     |      Get all gif request parameters out of the class in a dict form.
     |      Attributes starting with _ are cookie names, so we dont need them.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Q(__builtin__.object)
     |  Methods defined here:
     |  
     |  add_wrapped_request(self, req_wrapper)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  REQ_ARRAY = []
    
    class Request(GIFRequest)
     |  Method resolution order:
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session)
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_custom_variable_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  build_parameters(self)
     |  
     |  build_visitor_parameters(self, params)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class SocialInteractionRequest(Request)
     |  Method resolution order:
     |      SocialInteractionRequest
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session, social_interaction, page)
     |  
     |  build_parameters(self)
     |  
     |  get_type(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Request:
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_custom_variable_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  build_visitor_parameters(self, params)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from Request:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Tracker(__builtin__.object)
     |  Act like a Manager of all files
     |  
     |  Properties:
     |  account_id -- Google Analytics account ID, will be mapped to "utmac" parameter
     |  domain_name -- Host Name, will be mapped to "utmhn" parameter
     |  allow_hash --  Whether to generate a unique domain hash,
     |                 default is true to be consistent with the GA Javascript Client
     |  custom_variables -- CustomVariable instances
     |  campaign -- Campaign instance
     |  
     |  Methods defined here:
     |  
     |  __init__(self, account_id='', domain_name='', conf=None)
     |  
     |  __setattr__(self, name, value)
     |  
     |  add_custom_variable(self, custom_var)
     |      Equivalent of _setCustomVar() in GA Javascript client
     |      http://code.google.com/apis/analytics/docs/tracking/gaTrackingCustomVariables.html
     |  
     |  remove_custom_variable(self, index)
     |      Equivalent of _deleteCustomVar() in GA Javascript client.
     |  
     |  track_event(self, event, session, visitor)
     |      Equivalent of _trackEvent() in GA Javascript client.
     |  
     |  track_pageview(self, page, session, visitor)
     |      Equivalent of _trackPageview() in GA Javascript client.
     |  
     |  track_social(self, social_interaction, page, session, visitor)
     |      Equivalent of _trackSocial() in GA Javascript client.
     |  
     |  track_transaction(self, transaction, session, visitor)
     |      Combines _addTrans(), _addItem() (indirectly) and _trackTrans() of GA Javascript client.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  VERSION = '5.2.5'
     |  
     |  config = <requests.Config object>
    
    class TransactionRequest(Request)
     |  Method resolution order:
     |      TransactionRequest
     |      Request
     |      GIFRequest
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config, tracker, visitor, session, transaction)
     |  
     |  build_custom_variable_parameters(self, parameters)
     |      The GA Javascript client doesn't send any custom variables for
     |      e-commerce requests, so we don't either.
     |  
     |  build_parameters(self)
     |  
     |  build_visitor_parameters(self, parameters)
     |      The GA Javascript client doesn't send any visitor information for
     |      e-commerce requests, so we don't either.
     |  
     |  get_type(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Request:
     |  
     |  build_campaign_parameters(self, params)
     |  
     |  build_cookie_parameters(self, params)
     |  
     |  build_http_request(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from Request:
     |  
     |  TYPE_CUSTOMVARIABLE = 'var'
     |  
     |  TYPE_EVENT = 'event'
     |  
     |  TYPE_ITEM = 'item'
     |  
     |  TYPE_PAGE = None
     |  
     |  TYPE_SOCIAL = 'social'
     |  
     |  TYPE_TRANSACTION = 'tran'
     |  
     |  X10_CUSTOMVAR_NAME_PROJECT_ID = 8
     |  
     |  X10_CUSTOMVAR_SCOPE_PROJECT_ID = 11
     |  
     |  X10_CUSTOMVAR_VALUE_PROJCT_ID = 9
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from GIFRequest:
     |  
     |  fire(self)
     |      Simply delegates to send() if config option "queue_requests" is disabled
     |      else enqueues the request into Q object: you should call pyga.shutdowon
     |      as last statement, to actually send out all queued requests.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from GIFRequest:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class X10(__builtin__.object)
     |  Methods defined here:
     |  
     |  __init__(self)
     |  
     |  clear_key(self, project_id)
     |  
     |  clear_value(self, project_id)
     |  
     |  get_key(self, project_id, num)
     |  
     |  get_value(self, project_id, num)
     |  
     |  has_project(self, project_id)
     |  
     |  render_url_string(self)
     |  
     |  set_key(self, project_id, num, value)
     |  
     |  set_value(self, project_id, num, value)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  LABEL_KEY_NUM = 3
     |  
     |  OBJECT_KEY_NUM = 1
     |  
     |  TYPE_KEY_NUM = 2
     |  
     |  VALUE_VALUE_NUM = 1

FUNCTIONS
    floor(...)
        floor(x)
        
        Return the floor of x as a float.
        This is the largest integral value <= x.

DATA
    __author__ = 'Arun KR (kra3) <the1.arun@gmail.com>'
    __license__ = 'Simplified BSD'
    stderr = <open file '<stderr>', mode 'w'>

AUTHOR
    Arun KR (kra3) <the1.arun@gmail.com>


